{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","props","tabs","content","find","tab","id","selectedTabId","className","map","type","classNames","active","onClick","event","preventDefault","onTabSelect","handleTabChange","title","App","state","selectedTab","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8QAWaA,EAAuB,SAACC,GACnC,IAQMC,EAAI,YAAOD,EAAMC,MACnBC,EAAuBD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,EAAMM,kBAAkBL,EAAK,GAIpF,OAFAC,EAAUA,EAAQA,QAGhB,qCACE,oBAAIK,UAAU,eAAd,SACGN,EAAKO,KAAI,SAAAJ,GAAG,OACX,6BACE,wBACEK,KAAK,SACLF,UAAWG,IAAW,WAAY,CAChCC,OAAQP,EAAIC,KAAOL,EAAMM,gBAE3BM,QACE,SAACC,IAxBS,SAACA,EAA2CT,GAClES,EAAMC,iBAEFV,EAAIC,KAAOL,EAAMM,eACnBN,EAAMe,YAAYX,GAqBNY,CAAgBH,EAAOT,IAP7B,SAWGA,EAAIa,SAZAb,EAAIC,SAiBjB,qBAAKE,UAAU,UAAf,SACGL,QC3CHD,EAAc,CAClB,CAAEI,GAAI,QAASY,MAAO,QAASf,QAAS,eACxC,CAAEG,GAAI,QAASY,MAAO,QAASf,QAAS,eACxC,CAAEG,GAAI,QAASY,MAAO,QAASf,QAAS,gBAWpCgB,E,4MACJC,MAAQ,CACNC,YAAanB,EAAK,I,EAGpBc,YAAc,SAACX,GACb,EAAKiB,SAAS,CACZD,YAAahB,K,4CAIjB,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,iDAEG,IACD,4BAEIe,KAAKH,MAAMC,YAAYf,QAI7B,cAAC,EAAD,CACEJ,KAAMA,EACNK,cAAegB,KAAKH,MAAMC,YAAYf,GACtCU,YAAaO,KAAKP,qB,GA1BVQ,IAAMC,WAiCTN,IChDfO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.dc69779d.chunk.js","sourcesContent":["import React from 'react';\nimport './Tabs.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport classNames from 'classnames';\n\ntype Props = {\n  tabs:Tab[]\n  selectedTabId:string\n  onTabSelect:(tabId:Tab) => void\n};\n\nexport const Tabs:React.FC<Props> = (props) => {\n  const handleTabChange = (event:React.MouseEvent<HTMLButtonElement>, tab:Tab) => {\n    event.preventDefault();\n\n    if (tab.id !== props.selectedTabId) {\n      props.onTabSelect(tab);\n    }\n  };\n\n  const tabs = [...props.tabs];\n  let content:Tab | string = tabs.find(tab => tab.id === props.selectedTabId) || tabs[0];\n\n  content = content.content;\n\n  return (\n    <>\n      <ul className=\"nav nav-tabs\">\n        {tabs.map(tab => (\n          <li key={tab.id}>\n            <button\n              type=\"button\"\n              className={classNames('nav-link', {\n                active: tab.id === props.selectedTabId,\n              })}\n              onClick={\n                (event) => {\n                  handleTabChange(event, tab);\n                }\n              }\n            >\n              {tab.title}\n            </button>\n          </li>\n        ))}\n      </ul>\n      <div className=\"Content\">\n        {content}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nconst tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype Props = {\n\n};\n\ntype State = {\n  selectedTab:Tab;\n};\n\nclass App extends React.Component<Props, State> {\n  state = {\n    selectedTab: tabs[0],\n  };\n\n  onTabSelect = (tab:Tab) => {\n    this.setState({\n      selectedTab: tab,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h3>\n          Current tab is:\n          {' '}\n          <b>\n            {\n              this.state.selectedTab.id\n            }\n          </b>\n        </h3>\n        <Tabs\n          tabs={tabs}\n          selectedTabId={this.state.selectedTab.id}\n          onTabSelect={this.onTabSelect}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}